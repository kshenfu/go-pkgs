(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{168:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log","aria-hidden":"true"}},[t._v("#")]),t._v(" log")]),t._v(" "),a("h2",{attrs:{id:"logger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logger","aria-hidden":"true"}},[t._v("#")]),t._v(" Logger")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("New(out io.Writer, prefix string, flag int)")]),t._v("可以创建一个"),a("code",[t._v("Logger")]),t._v("，其中：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("out")]),t._v("：日志输出目标")]),t._v(" "),a("li",[a("code",[t._v("prefix")]),t._v("：日志数据前缀")]),t._v(" "),a("li",[a("code",[t._v("flag")]),t._v("：标志位，控制日志的输出格式")])]),t._v(" "),a("p",[t._v("其中"),a("code",[t._v("flag")]),t._v("可取值为：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// Bits or'ed together to control what's printed.")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// There is no control over the order they appear (the order listed")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// here) or the format they present (as described in the comments).")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// The prefix is followed by a colon only when Llongfile or Lshortfile")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// is specified.")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// For example, flags Ldate | Ltime (or LstdFlags) produce,")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("//  2009/01/23 01:23:23 message")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// while flags Ldate | Ltime | Lmicroseconds | Llongfile produce,")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("//  2009/01/23 01:23:23.123123 /a/b/c/d.go:23: message")]),t._v("\n    Ldate         "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("iota")]),t._v("     "),a("span",{attrs:{class:"token comment"}},[t._v("// the date in the local time zone: 2009/01/23")]),t._v("\n    Ltime                         "),a("span",{attrs:{class:"token comment"}},[t._v("// the time in the local time zone: 01:23:23")]),t._v("\n    Lmicroseconds                 "),a("span",{attrs:{class:"token comment"}},[t._v("// microsecond resolution: 01:23:23.123123.  assumes Ltime.")]),t._v("\n    Llongfile                     "),a("span",{attrs:{class:"token comment"}},[t._v("// full file name and line number: /a/b/c/d.go:23")]),t._v("\n    Lshortfile                    "),a("span",{attrs:{class:"token comment"}},[t._v("// final file name element and line number: d.go:23. overrides Llongfile")]),t._v("\n    LUTC                          "),a("span",{attrs:{class:"token comment"}},[t._v("// if Ldate or Ltime is set, use UTC rather than the local time zone")]),t._v("\n    LstdFlags     "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Ldate "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" Ltime "),a("span",{attrs:{class:"token comment"}},[t._v("// initial values for the standard logger")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("下面是一个例子，首先是输出日志到标准输出，然后更改设置，输出到文件：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[t._v("logger "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" log"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("New")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stdout"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"my logger: "')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" log"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LstdFlags"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nfmt"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Println")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logger"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Prefix")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// "my logger: "')]),t._v("\nfmt"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Println")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("logger"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Flags")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n\nlogger"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Println")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"hello world"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// my logger: 2017/05/19 15:22:17 hello world")]),t._v("\n\nfile"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),a("span",{attrs:{class:"token operator"}},[t._v(":=")]),t._v(" os"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("OpenFile")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"data.log"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" os"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("O_RDWR"),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v("os"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("O_CREATE"),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v("os"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("O_APPEND"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0666")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" err "),a("span",{attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("nil")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("panic")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"open log file error"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("defer")]),t._v(" file"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Close")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlogger"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("SetOutput")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlogger"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("SetPrefix")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"hello: "')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlogger"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("SetFlags")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("log"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Lmicroseconds "),a("span",{attrs:{class:"token operator"}},[t._v("|")]),t._v(" log"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Lshortfile"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nlogger"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("Println")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"hello world"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// hello: 15:22:17.050889 main.go:27: hello world")]),t._v("\n")])])]),a("p",[a("code",[t._v("Logger")]),t._v("的输出方式有三种:")]),t._v(" "),a("ul",[a("li",[t._v("Print: Print, Printf, Println")]),t._v(" "),a("li",[t._v("Fatal: Fatal, Fatalf, Fatalln")]),t._v(" "),a("li",[t._v("Panic: Panic, Panicf, Panicln")])]),t._v(" "),a("p",[t._v("其中Fatal相当于是Print之后跟了一个"),a("code",[t._v("os.Exit(1)")]),t._v("操作，Panic相当于是Print后跟了一个"),a("code",[t._v("panic()")]),t._v("。")]),t._v(" "),a("p",[t._v("这三种输出方式，本质上都是调用了"),a("code",[t._v("Output")]),t._v("方法，一般我们不会主动调用该方法。")]),t._v(" "),a("h2",{attrs:{id:"全局logger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局logger","aria-hidden":"true"}},[t._v("#")]),t._v(" 全局Logger")]),t._v(" "),a("p",[t._v("logger模块中有一个非导出的全局默认"),a("code",[t._v("Logger")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" std "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("New")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Stderr"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('""')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LstdFlags"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("logger模块的全局方法，实际上就是调用了"),a("code",[t._v("std")]),t._v("的相应方法。")])])}],!1,null,null,null);o.options.__file="README.md";s.default=o.exports}}]);